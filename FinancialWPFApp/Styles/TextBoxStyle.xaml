<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
                    
                    >
    <Style x:Key="StyledTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="AllowDrop"  Value="true" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderButtonColor}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontSize" Value="{DynamicResource textFontSize}" />
        <Setter Property="Foreground" Value="{DynamicResource SecondaryTextColor}" />
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="CaretBrush" Value="Aqua" />
        <Setter Property="Height" Value="45" />
        <Setter Property="Padding" Value="10 5" />
        <Setter Property="Template">


            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border Name="Border"
                CornerRadius="7"
                Padding="2"
                BorderThickness="1"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}">

                        <Grid >
                            <TextBox Text="{Binding Path=Text,
                                                RelativeSource={RelativeSource TemplatedParent}, 
                                                Mode=TwoWay,
                                                UpdateSourceTrigger=PropertyChanged}"
                                     x:Name="textSource" 

                                     TextWrapping="Wrap"
                                     Background="{TemplateBinding Background}" 
                                     Foreground="{TemplateBinding Foreground}"
                                     BorderThickness="0"
                                     BorderBrush="Transparent"
                                     VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                     Padding="{TemplateBinding Padding}"
                                     Panel.ZIndex="2"
                                     >
                               
                            </TextBox>
                            <TextBox BorderThickness="0"
                                     BorderBrush="Transparent" 
                                     Text="{TemplateBinding Tag}" 
                                     Background="{DynamicResource TertiaryBackgroundColor}" 
                                     VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                     Panel.ZIndex="1">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Setter Property="Foreground" Value="Transparent"/>
                                        <Setter Property="Padding" Value="10 5" />
                                        <Setter Property="Opacity"  Value="1" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=Text, Source={x:Reference textSource}}" 
                                                         Value="">
                                                <Setter Property="Foreground" 
                                                        Value="{DynamicResource PrimaryTextColor}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                           
                        </Grid>
                       


                    </Border>
                    <ControlTemplate.Triggers>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <!-- Mouse Over -->
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBlueColor}"/>
                            <Setter Property="Foreground" Value="{DynamicResource SecondaryTextColor}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <!-- Desactivé-->
                                <Condition Property="IsEnabled" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{DynamicResource ButtonHover}"/>
                            <Setter Property="Foreground" Value="{DynamicResource SecondaryTextColor}"/>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <!-- Focus-->
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{DynamicResource TertiaryBlueColor}"/>
                            <Setter Property="Foreground" Value="{DynamicResource TertiaryBlueColor}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>




    <Style x:Key="StyledTextBoxSearch" TargetType="{x:Type TextBox}">
        <Setter Property="AllowDrop"  Value="true" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderButtonColor}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontSize" Value="{DynamicResource textFontSize}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}" />
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="CaretBrush" Value="Aqua" />
        <Setter Property="Height" Value="45" />
        <Setter Property="Padding" Value="10 5" />
        <Setter Property="Template">


            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border Name="Border"
                CornerRadius="0 7 7 0"
                Padding="2"
                BorderThickness="1"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}">

                        <Grid >
                            <TextBox Text="{Binding Path=Text,
                                                RelativeSource={RelativeSource TemplatedParent}, 
                                                Mode=TwoWay,
                                                UpdateSourceTrigger=PropertyChanged}"
                                     x:Name="textSource" 

                                     TextWrapping="Wrap"
                                     Background="{TemplateBinding Background}" 
                                     Foreground="{TemplateBinding Foreground}" 
                                     BorderThickness="0"
                                     BorderBrush="{TemplateBinding Background}"
                                     VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                     Padding="{TemplateBinding Padding}"
                                     Panel.ZIndex="2"
                                     >

                            </TextBox>
                            <TextBox BorderThickness="0"
                                     BorderBrush="Transparent" 
                                     Text="{TemplateBinding Tag}" 
                                     Background="{DynamicResource TertiaryBackgroundColor}" 
                                     VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                     Panel.ZIndex="1">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Setter Property="Foreground" Value="Transparent"/>
                                        <Setter Property="Padding" Value="10 5" />

                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=Text, Source={x:Reference textSource}}" 
                                                         Value="">
                                                <Setter Property="Foreground" 
                                                        Value="{DynamicResource PrimaryTextColor}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>

                        </Grid>



                    </Border>
                    <ControlTemplate.Triggers>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <!-- Mouse Over -->
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBlueColor}"/>
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <!-- Desactivé-->
                                <Condition Property="IsEnabled" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryGreenColor}"/>
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryBlackColor}"/>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <!-- Focus-->
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{DynamicResource TertiaryBlueColor}"/>
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
  

   
</ResourceDictionary>
    
    
    